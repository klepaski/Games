@using task6x.Models;
@using Microsoft.AspNetCore.Mvc.Rendering;
@{
    ViewBag.Title = "Hangman";
    string role = ViewBag.Role;
    string username = ViewBag.UserName;
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.13/signalr.min.js"></script>

<div class="preGroupCreate">
    @if (role == "host")
    {
        <h3 id="welcomeWords">You created game session. Wait for another player to join.</h3>
    }
    else
    {
        <h3 id="welcomeWords">What user would you like to join?</h3>
        <input required id="chooseHost" class="form-w" placeholder="username" /><br />
        <button class="btn btn-pink" id="chooseHostButton">Join</button><br/>
        <h3 id="wrongHost"></h3>
    }
</div>


<div class="row preGame" style="display: none;">
    <div class="welcomeGame">
        <h3 id="welcomeWords">Welcome to the 'Hangman' game!</h3>
        <hr />
        <h5><b>Rules:</b></h5>
        <h5>  ♥ Host chooses the secret word</h5>
        <h5>  ♥ Player tries to guess each word's letter</h5>
        <h5>  ♥ 1 incorrect guess = +1 part to hangman</h5>
        <hr />
        <img id="welcomePic" src="~/img/hangman/choose.PNG" />

    </div>
    <div class="preGameChoose">
        @if (@role == "host")
        {
            <h3 id="welcomeWords">Enter the word and hint:</h3>
            <input required id="word" class="form-w" placeholder="word" />
            <input required id="hint" class="form-w" placeholder="hint" />

            <br />
            <button class="btn btn-pink" id="sendWordButton">Start</button>
        }
        else
        {
            <h3 id="welcomeWords">Please, wait while host enters the word.</h3>
        }
    </div>
</div>


<div class="row game" style="display: none;">
    <div class="col-md-4">
        <div id="displayWord"></div>

        <div id="hangman"><img id="hangmanPic" src="~/img/hangman/0.PNG" /></div>
    </div>

    <div class="col-md-8" id="gameProcess">
        <div id="guessLetter">
            <h5>Guess the letter:</h5>
            <ul id="keyboard">
                <li class="letter">A</li>
                <li class="letter">B</li>
                <li class="letter">C</li>
                <li class="letter">D</li>
                <li class="letter">E</li>
                <li class="letter">F</li>
                <li class="letter">G</li>
                <li class="letter">H</li>
                <li class="letter">I</li>
                <li class="letter">J</li>
                <li class="letter">K</li>
                <li class="letter">L</li>
                <li class="letter">M</li>
                <li class="letter">N</li>
                <li class="letter">O</li>
                <li class="letter">P</li>
                <li class="letter">Q</li>
                <li class="letter">R</li>
                <li class="letter">S</li>
                <li class="letter">T</li>
                <li class="letter">U</li>
                <li class="letter">V</li>
                <li class="letter">W</li>
                <li class="letter">X</li>
                <li class="letter">Y</li>
                <li class="letter">Z</li>
            </ul>
            <button class="btn btn-pink" id="watchHintButton">Watch a hint</button>
            <div id="hintDisplay" style="display: none;"></div>
        </div>
        <h3 id="result"></h3>
    </div>
</div>


<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/Hangman?role=@role&username=@username").build();

    var _word = "";
    var _hint = "";
    var _displayWord = "";
    var _tries = 0;
    var _group = "";

    connection.on("ReceiveGroup", function (group, isGroupComplete) {
        _group = group;
        console.log(_group);
        console.log(isGroupComplete);
        if (isGroupComplete) {
            $(".preGroupCreate").hide();
            $(".preGame").show();
        }
    });

    connection.on("WrongHost", function (message) {
        $("#wrongHost").text(message);
    });

    connection.on("CloseGroup", function () {
        $(".preGame").hide();
        $(".game").hide();
        $(".preGroupCreate").show().html("<h3 id='welcomeWords'> Sorry, another player left the game.</h3>");
    });

    $("#chooseHostButton").click(function () {
        var hostName = $("#chooseHost").val();
        connection.invoke("ChooseHost", hostName, "@username");
    });

    $("#sendWordButton").click(function () {
        var word = $("#word").val();
        var hint = $("#hint").val();
        connection.invoke("SendWord", word, hint, _group);
        $("#word").val("");
        $("#hint").val("");
    });

    connection.on("ReceiveWord", function (displayWord, word, hint) {
        _tries = 0;
        _displayWord = displayWord;
        _word = word;
        _hint = hint;

        $(".preGame").hide();
        $(".game").show();
        if ("@role" == "host") {
            $("#guessLetter").css('pointer-events', 'none');
        }
        $("#displayWord").text(displayWord);
    });
    //------------------------------------------

    $('#keyboard li').click(function () {
        var letter = $(this).text();
        $(this).attr('id', 'pressed');
        connection.invoke("SendLetter", letter, "@role", _word, _displayWord, _tries, _group);
    });

    connection.on("ReceiveLetter", function (isOver, isRight, displayWord, tries, letter, userName) {
        _tries = tries;
        _displayWord = displayWord;
        $("#displayWord").text(displayWord);
        $("#pressed").attr('id', isRight ? 'right' : 'wrong');
        if (isOver) {
            $("#guessLetter").hide();
            $("#result").text(isRight ? `${userName} won. Congratulations!` : `${userName} lost. Better luck next time!`);
        }
        if (!isRight) {
            $('#hangmanPic').attr('src', `/img/hangman/${tries}.PNG`);
        }
    });

    $("#watchHintButton").click(function () {
        $("#hintDisplay").show().text(_hint);
    });

    connection.start().then(function () {
        console.log("Connected!");
    }).catch(function (err) {
        console.error(err.toString());
    });
</script>
